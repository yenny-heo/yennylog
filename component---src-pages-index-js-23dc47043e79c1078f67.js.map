{"version":3,"file":"component---src-pages-index-js-23dc47043e79c1078f67.js","mappings":"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","sources":["webpack://yennylog/./src/hooks/tabs.hooks.js","webpack://yennylog/./src/hooks/tags.hooks.js","webpack://yennylog/./src/pages/index.js","webpack://yennylog/./src/hoc/withLocation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { navigate } from \"gatsby\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { tabState } from \"@/state\";\r\n\r\nconst initializeTabs = tabs => {\r\n  return tabs.map(item => ({ ...item, active: false }));\r\n};\r\n\r\nconst TabsHooks = ({ group, location }) => {\r\n  const [tabs, setTabs] = useState(\r\n    initializeTabs(group).sort((a, b) => b.totalCount - a.totalCount)\r\n  );\r\n  const [tab, setTab] = useRecoilState(tabState);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const tabParam = params.get(\"tab\");\r\n    if (!tabParam) return;\r\n    setTab(tabParam);\r\n  }, [location.search, setTab]);\r\n\r\n  const onChangeTab = index => {\r\n    let newTabs = initializeTabs([...tabs]);\r\n    const selectedTab = newTabs[index].tag;\r\n    setTabs(newTabs);\r\n    setTab(selectedTab);\r\n    navigate(`/?tab=${selectedTab}`);\r\n  };\r\n\r\n  return { tabs, tab, onChangeTab };\r\n};\r\n\r\nexport default TabsHooks;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst TagsHooks = ({ edges, tab, location }) => {\r\n  const [tags, setTags] = useState([]);\r\n  const [tag, setTag] = useState(\"\");\r\n  const [filteredEdges, setFilteredEdges] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const tagParam = params.get(\"tag\");\r\n    setTag(tagParam || \"\");\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    const newTags = [];\r\n    const filteredByTab = edges.filter(edge => {\r\n      const { type } = edge.node.frontmatter;\r\n      return type === tab;\r\n    });\r\n    const filteredByTag = filteredByTab.filter(edge => {\r\n      const { tags } = edge.node.frontmatter;\r\n      newTags.push(...tags);\r\n      return !tag || tags.includes(tag);\r\n    });\r\n    const tagNameSet = [...new Set(newTags)];\r\n    const tagObjs = [];\r\n    tagNameSet.forEach(tagName => {\r\n      const tagCount = newTags.filter(newTag => tagName === newTag).length;\r\n      tagObjs.push({\r\n        name: tagName,\r\n        count: tagCount,\r\n      });\r\n    });\r\n    setFilteredEdges(filteredByTag);\r\n    setTags(tagObjs);\r\n  }, [edges, tab, tag]);\r\n\r\n  return { tags, tag, filteredEdges };\r\n};\r\n\r\nexport default TagsHooks;\r\n","import React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport Layout from \"@/layout\";\r\nimport { PostCard, Tabs } from \"@/components\";\r\nimport Seo from \"@/components/seo\";\r\nimport TabsHooks from \"@/hooks/tabs.hooks\";\r\nimport TagsHooks from \"@/hooks/tags.hooks\";\r\nimport withLocation from \"@/hoc/withLocation\";\r\n\r\nconst IndexPage = ({ data, location }) => {\r\n  const { totalCount, edges, group } = data.allMarkdownRemark;\r\n  const { tabs, tab, onChangeTab } = TabsHooks({ group, location });\r\n  const { tags, tag, filteredEdges } = TagsHooks({ edges, tab, location });\r\n\r\n  return (\r\n    <Layout tagsInfo={{ tags, tag }}>\r\n      <Seo title=\"Home\" />\r\n      <Tabs tabs={tabs} onChangeTab={onChangeTab} currentTab={tab} />\r\n      {filteredEdges.map(({ node }) => (\r\n        <PostCard key={node.id} node={node} />\r\n      ))}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMM YYYY\")\r\n            description\r\n            tags\r\n            type\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n          tableOfContents\r\n        }\r\n      }\r\n      group(field: frontmatter___type) {\r\n        tag: fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default withLocation(IndexPage);\r\n","import React from \"react\";\r\nimport { Location } from \"@reach/router\";\r\n\r\nconst withLocation = Component => props =>\r\n  (\r\n    <Location>\r\n      {({ location }) => <Component location={location} {...props} />}\r\n    </Location>\r\n  );\r\n\r\nexport default withLocation;\r\n"],"names":["initializeTabs","tabs","map","item","active","group","location","useState","sort","a","b","totalCount","setTabs","useRecoilState","tabState","tab","setTab","useEffect","tabParam","URLSearchParams","search","get","onChangeTab","index","newTabs","selectedTab","tag","navigate","edges","tags","setTags","setTag","filteredEdges","setFilteredEdges","tagParam","newTags","filteredByTag","filter","edge","node","frontmatter","type","push","includes","tagNameSet","Set","tagObjs","forEach","tagName","tagCount","newTag","length","name","count","Component","props","Location","data","allMarkdownRemark","TabsHooks","TagsHooks","tagsInfo","title","currentTab","key","id"],"sourceRoot":""}