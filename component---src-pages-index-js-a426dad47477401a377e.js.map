{"version":3,"file":"component---src-pages-index-js-a426dad47477401a377e.js","mappings":"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","sources":["webpack://yennylog/./src/hooks/tabs.hooks.js","webpack://yennylog/./src/hooks/tags.hooks.js","webpack://yennylog/./src/pages/index.js","webpack://yennylog/./src/hoc/withLocation.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { navigate } from \"gatsby\";\nimport { useRecoilState } from \"recoil\";\nimport { tabState } from \"@/state\";\n\nconst initializeTabs = tabs => {\n  return tabs.map(item => ({ ...item, active: false }));\n};\n\nconst TabsHooks = ({ group, location }) => {\n  const [tabs, setTabs] = useState(\n    initializeTabs(group).sort((a, b) => b.totalCount - a.totalCount)\n  );\n  const [tab, setTab] = useRecoilState(tabState);\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const tabParam = params.get(\"tab\");\n    if (!tabParam) return;\n    setTab(tabParam);\n  }, [location.search, setTab]);\n\n  const onChangeTab = index => {\n    let newTabs = initializeTabs([...tabs]);\n    const selectedTab = newTabs[index].tag;\n    setTabs(newTabs);\n    setTab(selectedTab);\n    navigate(`/?tab=${selectedTab}`);\n  };\n\n  return { tabs, tab, onChangeTab };\n};\n\nexport default TabsHooks;\n","import { useState, useEffect } from \"react\";\n\nconst TagsHooks = ({ edges, tab, location }) => {\n  const [tags, setTags] = useState([]);\n  const [tag, setTag] = useState(\"\");\n  const [filteredEdges, setFilteredEdges] = useState([]);\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const tagParam = params.get(\"tag\");\n    setTag(tagParam || \"\");\n  }, [location.search]);\n\n  useEffect(() => {\n    const newTags = [];\n    const filteredByTab = edges.filter(edge => {\n      const { type } = edge.node.frontmatter;\n      return type === tab;\n    });\n    const filteredByTag = filteredByTab.filter(edge => {\n      const { tags } = edge.node.frontmatter;\n      newTags.push(...tags);\n      return !tag || tags.includes(tag);\n    });\n    const tagNameSet = [...new Set(newTags)];\n    const tagObjs = [];\n    tagNameSet.forEach(tagName => {\n      const tagCount = newTags.filter(newTag => tagName === newTag).length;\n      tagObjs.push({\n        name: tagName,\n        count: tagCount,\n      });\n    });\n    setFilteredEdges(filteredByTag);\n    setTags(tagObjs);\n  }, [edges, tab, tag]);\n\n  return { tags, tag, filteredEdges };\n};\n\nexport default TagsHooks;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"@/layout\";\nimport { PostCard, Tabs } from \"@/components\";\nimport Seo from \"@/components/seo\";\nimport TabsHooks from \"@/hooks/tabs.hooks\";\nimport TagsHooks from \"@/hooks/tags.hooks\";\nimport withLocation from \"@/hoc/withLocation\";\n\nconst IndexPage = ({ data, location }) => {\n  const { totalCount, edges, group } = data.allMarkdownRemark;\n  const { tabs, tab, onChangeTab } = TabsHooks({ group, location });\n  const { tags, tag, filteredEdges } = TagsHooks({ edges, tab, location });\n\n  return (\n    <Layout tagsInfo={{ tags, tag }}>\n      <Seo title=\"Home\" />\n      <Tabs tabs={tabs} onChangeTab={onChangeTab} currentTab={tab} />\n      {filteredEdges.map(({ node }) => (\n        <PostCard key={node.id} node={node} />\n      ))}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM YYYY\")\n            description\n            tags\n            type\n          }\n          fields {\n            slug\n          }\n          excerpt\n          tableOfContents\n        }\n      }\n      group(field: frontmatter___type) {\n        tag: fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport default withLocation(IndexPage);\n","import React from \"react\";\nimport { Location } from \"@reach/router\";\n\nconst withLocation = Component => props =>\n  (\n    <Location>\n      {({ location }) => <Component location={location} {...props} />}\n    </Location>\n  );\n\nexport default withLocation;\n"],"names":["initializeTabs","tabs","map","item","active","group","location","useState","sort","a","b","totalCount","setTabs","useRecoilState","tabState","tab","setTab","useEffect","tabParam","URLSearchParams","search","get","onChangeTab","index","newTabs","selectedTab","tag","navigate","edges","tags","setTags","setTag","filteredEdges","setFilteredEdges","tagParam","newTags","filteredByTag","filter","edge","node","frontmatter","type","push","includes","tagNameSet","Set","tagObjs","forEach","tagName","tagCount","newTag","length","name","count","Component","props","Location","data","allMarkdownRemark","TabsHooks","TagsHooks","tagsInfo","title","currentTab","key","id"],"sourceRoot":""}