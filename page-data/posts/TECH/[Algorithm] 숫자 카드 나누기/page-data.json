{"componentChunkName":"component---src-components-templates-post-index-js","path":"/posts/TECH/[Algorithm] 숫자 카드 나누기/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h1>\n<p>철수와 영희는 선생님으로부터 숫자가 하나씩 적힌 카드들을 절반씩 나눠서 가진 후, 다음 두 조건 중 하나를 만족하는 가장 큰 양의 정수 a의 값을 구하려고 합니다.</p>\n<p>철수가 가진 카드들에 적힌 모든 숫자를 나눌 수 있고 영희가 가진 카드들에 적힌 모든 숫자들 중 하나도 나눌 수 없는 양의 정수 a\r\n영희가 가진 카드들에 적힌 모든 숫자를 나눌 수 있고, 철수가 가진 카드들에 적힌 모든 숫자들 중 하나도 나눌 수 없는 양의 정수 a\r\n예를 들어, 카드들에 10, 5, 20, 17이 적혀 있는 경우에 대해 생각해 봅시다. 만약, 철수가 [10, 17]이 적힌 카드를 갖고, 영희가 [5, 20]이 적힌 카드를 갖는다면 두 조건 중 하나를 만족하는 양의 정수 a는 존재하지 않습니다. 하지만, 철수가 [10, 20]이 적힌 카드를 갖고, 영희가 [5, 17]이 적힌 카드를 갖는다면, 철수가 가진 카드들의 숫자는 모두 10으로 나눌 수 있고, 영희가 가진 카드들의 숫자는 모두 10으로 나눌 수 없습니다. 따라서 철수와 영희는 각각 [10, 20]이 적힌 카드, [5, 17]이 적힌 카드로 나눠 가졌다면 조건에 해당하는 양의 정수 a는 10이 됩니다.</p>\n<p>철수가 가진 카드에 적힌 숫자들을 나타내는 정수 배열 arrayA와 영희가 가진 카드에 적힌 숫자들을 나타내는 정수 배열 arrayB가 주어졌을 때, 주어진 조건을 만족하는 가장 큰 양의 정수 a를 return하도록 solution 함수를 완성해 주세요. 만약, 조건을 만족하는 a가 없다면, 0을 return 해 주세요.</p>\n<h1 id=\"접근-방식\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC-%EB%B0%A9%EC%8B%9D\" aria-label=\"접근 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근 방식</h1>\n<p>한쪽 배열에서는 모두 나눠지고, 한쪽 배열에서는 모두 나눠지지 않는 수 중 가장 큰 수를 찾는 문제이다.</p>\n<p>반복문을 최소한으로 돌기 위해서는, 배열에서 가장 작은 수의 약수를 추출해서 해당 약수에서 정답을 찾으면 된다고 생각했다.</p>\n<p>Sorting을 통해 가장 작은 수를 찾고, 그 가장 작은 수의 약수를 큰 순서대로 구하였다.</p>\n<p>그리고 반복문을 통해 조건에 맞는 수를 찾아주었다.</p>\n<h1 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h1>\n<deckgo-highlight-code language=\"javascript\"  >\n          <code slot=\"code\">function solution(arrayA, arrayB) {\r\n  let answer = 0;\r\n  let answerA = 0,\r\n    answerB = 0;\r\n\r\n  const sortedArrayA = arrayA.sort((a, b) =&gt; a - b);\r\n  const sortedArrayB = arrayB.sort((a, b) =&gt; a - b);\r\n\r\n  const minA = sortedArrayA[0];\r\n  const minB = sortedArrayB[0];\r\n\r\n  // A에서 모든 수가 나눠지고, B에서는 모든 수를 나눌 수 없는 수 찾기\r\n  // minA의 약수 찾기\r\n  const divisorA = [];\r\n  for (let i = minA; i &gt; 1; i--) {\r\n    if (minA % i === 0) {\r\n      divisorA.push(i);\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i &lt; divisorA.length; i++) {\r\n    let isNotADivisor = false,\r\n      isBDivisor = false;\r\n    // 약수가 A에서 모두 나눠지는지 확인하기\r\n    for (let j = 0; j &lt; sortedArrayA.length; j++) {\r\n      if (sortedArrayA[j] % divisorA[i] !== 0) {\r\n        isNotADivisor = true;\r\n        break;\r\n      }\r\n    }\r\n    // A에서 나눠지지 않았다면 다른 수 찾기\r\n    if (isNotADivisor) continue;\r\n    // 약수가 A에서 모두 나눠지지 않는지 확인하기\r\n    for (let j = 0; j &lt; sortedArrayB.length; j++) {\r\n      if (sortedArrayB[j] % divisorA[i] === 0) {\r\n        isBDivisor = true;\r\n        break;\r\n      }\r\n    }\r\n    // A에서 나눠졌다면 다른 수 찾기\r\n    if (isBDivisor) continue;\r\n\r\n    if (!isNotADivisor &amp;&amp; !isBDivisor) {\r\n      answerA = divisorA[i];\r\n      break;\r\n    }\r\n  }\r\n\r\n  // B에서 모든 수가 나눠지고, A에서는 모든 수를 나눌 수 없는 수 찾기\r\n  // minB의 약수 찾기\r\n  const divisorB = [];\r\n  for (let i = minB; i &gt; 1; i--) {\r\n    if (minB % i === 0) {\r\n      divisorB.push(i);\r\n    }\r\n  }\r\n  for (let i = 0; i &lt; divisorB.length; i++) {\r\n    let isADivisor = false,\r\n      isNotBDivisor = false;\r\n    // 약수가 A에서 모두 나눠지지 않는지 확인하기\r\n    for (let j = 0; j &lt; sortedArrayA.length; j++) {\r\n      if (sortedArrayA[j] % divisorB[i] === 0) {\r\n        isADivisor = true;\r\n        break;\r\n      }\r\n    }\r\n    // A에서 나눠졌다면 다른 수 찾기\r\n    if (isADivisor) continue;\r\n    // 약수가 B에서 모두 나눠지는지 확인하기\r\n    for (let j = 0; j &lt; sortedArrayB.length; j++) {\r\n      if (sortedArrayB[j] % divisorB[i] !== 0) {\r\n        isNotBDivisor = true;\r\n        break;\r\n      }\r\n    }\r\n    // A에서 나눠졌다면 다른 수 찾기\r\n    if (isNotBDivisor) continue;\r\n\r\n    if (!isADivisor &amp;&amp; !isNotBDivisor) {\r\n      answerB = divisorB[i];\r\n      break;\r\n    }\r\n  }\r\n\r\n  return Math.max(answerA, answerB);\r\n}</code>\n        </deckgo-highlight-code>\n<h1 id=\"문제-링크\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC\" aria-label=\"문제 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 링크</h1>\n<p><a href=\"https://school.programmers.co.kr/learn/courses/30/lessons/135807\">https://school.programmers.co.kr/learn/courses/30/lessons/135807</a></p>","frontmatter":{"title":"[Algorithm] 숫자 카드 나누기","date":"2022-11-12","tags":["JavaScript","Algorithm"],"type":"TECH"},"tableOfContents":"<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">문제 설명</a></li>\n<li><a href=\"#%EC%A0%91%EA%B7%BC-%EB%B0%A9%EC%8B%9D\">접근 방식</a></li>\n<li><a href=\"#%EC%BD%94%EB%93%9C\">코드</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC\">문제 링크</a></li>\n</ul>"}},"pageContext":{"slug":"/posts/TECH/[Algorithm] 숫자 카드 나누기/"}},"staticQueryHashes":["3649515864","63159454"]}