{"componentChunkName":"component---src-components-templates-post-index-js","path":"/posts/TECH/[React] gatsby에서 recoil 사용하기/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"설치\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98\" aria-label=\"설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치</h1>\n<p>우선 <a href=\"https://recoiljs.org/ko/docs/introduction/getting-started/\">Recoil</a>을 설치한다.</p>\n<deckgo-highlight-code language=\"html\"  >\n          <code slot=\"code\">$ npm install recoil</code>\n        </deckgo-highlight-code>\n<h1 id=\"전역-wrapping\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AD-wrapping\" aria-label=\"전역 wrapping permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 Wrapping</h1>\n<p>Recoil을 사용하려면, 최상위 엘리먼트를 <code>RecoilRoot</code> 로 감싸주어야 한다.</p>\n<p>그런데 Gatsby에서는 React와는 다르게 최상위 루트 컴포넌트인 <code>index.js</code> 파일이 없다.</p>\n<p>Gatsby 문서에 따르면 <code>gatsby-browser.js</code> 파일을 사용하면, <strong>추가 구성 요소로 래핑</strong>할 수 있다고 나와있다.</p>\n<p>모든 페이지들을 래핑하려면, <code>wrapPageElement</code> 함수가 필요하다. 이 함수는 <strong>페이지가 변경되어도 언마운트 되지 않는다</strong>.</p>\n<deckgo-highlight-code language=\"jsx\"  >\n          <code slot=\"code\">//gatsby-browser.js\r\n/**\r\n * Implement Gatsby&#39;s Browser APIs in this file.\r\n *\r\n * See: https://www.gatsbyjs.com/docs/browser-apis/\r\n */\r\n\r\n// You can delete this file if you&#39;re not using it\r\nimport React from &quot;react&quot;;\r\nimport { RecoilRoot } from &quot;recoil&quot;;\r\n\r\nexport const wrapPageElement = ({ element, props }) =&gt; {\r\n  return &lt;RecoilRoot {...props}&gt;{element}&lt;/RecoilRoot&gt;;\r\n};</code>\n        </deckgo-highlight-code>\n<h1 id=\"상태관리\" style=\"position:relative;\"><a href=\"#%EC%83%81%ED%83%9C%EA%B4%80%EB%A6%AC\" aria-label=\"상태관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상태관리</h1>\n<p>래핑해주었다면, 이제 Recoil을 사용할 수 있다!</p>\n<p>나는 간단하게 탭의 상태를 전역적으로 관리하고 싶었기에, Recoil의 <code>selector</code> 는 사용하지 않았다.</p>\n<deckgo-highlight-code language=\"jsx\"  >\n          <code slot=\"code\">// state/index.js\r\nimport { atom } from &quot;recoil&quot;;\r\n\r\nconst tabState = atom({\r\n  key: &quot;tabState&quot;,\r\n  default: &quot;TECH&quot;,\r\n});\r\n\r\nexport { tabState };</code>\n        </deckgo-highlight-code>\n<p>컴포넌트단에서는 <code>useRecoilState</code> 와 정의해 둔 state를 통해 값을 가져오고, 변경시킬 수 있다.</p>\n<p>useState와 사용법이 똑같다.</p>\n<deckgo-highlight-code language=\"jsx\"  >\n          <code slot=\"code\">// hooks/tabs.hooks.js\r\nimport { useRecoilState } from &quot;recoil&quot;;\r\nimport { tabState } from &quot;@/state&quot;;\r\nconst TabsHooks = ({}) =&gt; {\r\n  const [tab, setTab] = useRecoilState(tabState);\r\n  // ...\r\n};</code>\n        </deckgo-highlight-code>\n<h1 id=\"ssr\" style=\"position:relative;\"><a href=\"#ssr\" aria-label=\"ssr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSR</h1>\n<p>공식문서에 다음과 같이 나와있다.</p>\n<blockquote>\n<p><code>wrapPageElement</code> 함수는 Server-Side Rendering(SSR) API에도 존재한다.\r\nSSR을 통해 생성된 페이지가 브라우저에서 Hydrate 된 이후에도 동일하도록,\r\n일반적으로 <code>gatsby-ssr.js</code> 과 <code>gatsby-browser.js</code> 에 동일한 구성요소를 구현해야만 한다.</p>\n</blockquote>\n<p>즉, 서버 사이드 렌더링을 통해 생성된 HTML과, 클라이언트 사이드에서 이 HTML과 번들링 된 JS를 매칭시킬 때 (<strong>Hydrate</strong>) 두 요소가 동일해야 하기 때문에 동일한 코드를 작성해주라는 말인 것 같다.</p>\n<deckgo-highlight-code language=\"jsx\"  >\n          <code slot=\"code\">//gatsby-ssr.js\r\n/**\r\n * Implement Gatsby&#39;s SSR (Server Side Rendering) APIs in this file.\r\n *\r\n * See: https://www.gatsbyjs.com/docs/ssr-apis/\r\n */\r\n\r\n// You can delete this file if you&#39;re not using it\r\nimport React from &quot;react&quot;;\r\nimport { RecoilRoot } from &quot;recoil&quot;;\r\n\r\nexport const wrapPageElement = ({ element, props }) =&gt; {\r\n  return &lt;RecoilRoot {...props}&gt;{element}&lt;/RecoilRoot&gt;;\r\n};</code>\n        </deckgo-highlight-code>\n<h1 id=\"참조\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0\" aria-label=\"참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조</h1>\n<ul>\n<li><a href=\"https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser/\">https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser/</a></li>\n<li><a href=\"https://medium.com/swlh/how-to-use-recoil-js-library-in-gatsby-d5212f2cd623\">https://medium.com/swlh/how-to-use-recoil-js-library-in-gatsby-d5212f2cd623</a></li>\n</ul>","frontmatter":{"title":"[React] Gatsby에서 Recoil 사용하기","date":"2022-10-16","tags":["React","Gatsby"],"type":"TECH"},"tableOfContents":"<ul>\n<li><a href=\"#%EC%84%A4%EC%B9%98\">설치</a></li>\n<li><a href=\"#%EC%A0%84%EC%97%AD-wrapping\">전역 Wrapping</a></li>\n<li><a href=\"#%EC%83%81%ED%83%9C%EA%B4%80%EB%A6%AC\">상태관리</a></li>\n<li><a href=\"#ssr\">SSR</a></li>\n<li><a href=\"#%EC%B0%B8%EC%A1%B0\">참조</a></li>\n</ul>"}},"pageContext":{"slug":"/posts/TECH/[React] gatsby에서 recoil 사용하기/"}},"staticQueryHashes":["3649515864","63159454"]}